{"version":3,"file":"static/js/921.92c850bb.chunk.js","mappings":"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","sources":["webpack://social/./src/components/Users/Users.module.css?b9d0","components/Common/Paginator/Paginator.tsx","components/Users/Users.tsx","redux/selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users_title\":\"Users_users_title__b3D2I\",\"users_list\":\"Users_users_list__pU2-6\",\"user_item\":\"Users_user_item__57oRY\",\"avatar_wrapper\":\"Users_avatar_wrapper__D6Xg1\",\"user_item__avatar\":\"Users_user_item__avatar__xkjmn\",\"user_item__follow_btn\":\"Users_user_item__follow_btn__0u9W+\",\"user_item__unfollow_btn\":\"Users_user_item__unfollow_btn__G4Cm9\",\"user_item__right\":\"Users_user_item__right__NyDSq\",\"user_item__name_and_status\":\"Users_user_item__name_and_status__9wQ-9\",\"user_item__user_fullname\":\"Users_user_item__user_fullname__Q9W2t\",\"user_item__user_status\":\"Users_user_item__user_status__rKwpO\",\"user_item__location\":\"Users_user_item__location__2ORPn\",\"users__show_more\":\"Users_users__show_more__nUtW7\",\"users__pagination\":\"Users_users__pagination__K3f05\",\"users__pagination_item\":\"Users_users__pagination_item__z6S9S\",\"active\":\"Users_active__5oh+8\"};","import React from 'react'\r\n\r\ntype PropsType = {\r\n   pages: Array<number>\r\n   currentPage: number\r\n   onPageChanged: (newPage: number) => void\r\n   pagesCount: number\r\n   paginationItemStyle: string\r\n   activeItemStyle: string\r\n   paginationDivStyle: string\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({ pages, currentPage, onPageChanged,\r\n                                          pagesCount, paginationItemStyle,\r\n                                          paginationDivStyle, activeItemStyle\r\n                                       }) => {\r\n   const BeginButton = () => {\r\n      if (currentPage > 1) {return (\r\n          <span onClick={() => onPageChanged(1)} className={paginationItemStyle}>{`<<`}</span>\r\n      )} else {return null}\r\n  }\r\n  const EndButton = () => {\r\n      if (currentPage < pagesCount) {return (\r\n          <span onClick={() => onPageChanged(pagesCount)} className={paginationItemStyle}>{`>>`}</span>\r\n      )} else {return null}\r\n  }\r\n  \r\n   return (\r\n      <div className={paginationDivStyle}>\r\n         {<BeginButton />}\r\n         {pages.map(p => {\r\n            if (currentPage - p > 5 || currentPage - p < -5) {\r\n               return '';\r\n            }\r\n            return (\r\n               <span\r\n                  key={p}\r\n                  onClick={() => onPageChanged(p)}\r\n                  className={`${paginationItemStyle} ${currentPage === p ? activeItemStyle : ''}`}\r\n               >{p}</span>\r\n            )\r\n         })}\r\n         {<EndButton />}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Paginator","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userProfileImage from '../../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport { UserType } from '../../types/types';\r\n\r\ntype UserItemPropsType = {\r\n   authorised: boolean\r\n   user: UserType\r\n   follow: (userId: number) => void\r\n   unfollow: (userId: number) => void\r\n   followingInProgress: Array<number>\r\n}\r\nconst UserItem: React.FC<UserItemPropsType> = ({ authorised, user, follow, unfollow, followingInProgress }) => {\r\n   return (\r\n      <div key={user.id} className={s.user_item}>\r\n         <div className={s.user_item__left}>\r\n            <div className={s.avatar_wrapper}>\r\n               <NavLink to={'/profile/' + user.id}>\r\n                  <img className={s.user_item__avatar} src={user.photos.small || userProfileImage} alt=\"\" />\r\n               </NavLink>\r\n            </div>\r\n\r\n            {user.followed\r\n               ? <button\r\n                  disabled={followingInProgress.some(id => id === user.id)}\r\n                  onClick={() => { unfollow(user.id) }}\r\n                  className={s.user_item__unfollow_btn}\r\n               >Unfollow</button>\r\n\r\n               : <button\r\n                  disabled={followingInProgress.some(id => id === user.id) || !authorised}\r\n                  onClick={() => { follow(user.id) }}\r\n                  className={s.user_item__follow_btn}\r\n               >Follow</button>}\r\n\r\n         </div>\r\n         <div className={s.user_item__right}>\r\n            <div className={s.user_item__name_and_status}>\r\n               <NavLink to={'/profile/' + user.id}>\r\n                  <p className={s.user_item__user_fullname}>{user.name}</p>\r\n               </NavLink>\r\n               {user.status && <p className={s.user_item__user_status}>{user.status}</p> }\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\ntype UsersPropsType = {\r\n   authorised: boolean\r\n   totalUsersCount: number\r\n   pageSize: number\r\n   currentPage: number\r\n   onPageChanged: (newPage: number) => void\r\n   users: Array<UserType>\r\n   follow: (userId: number) => void\r\n   unfollow: (userId: number) => void\r\n   followingInProgress: Array<number>\r\n}\r\nconst Users: React.FC<UsersPropsType> = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div className={s.users_wrapper}>\r\n             <Paginator\r\n               pages={pages}\r\n               currentPage={props.currentPage}\r\n               onPageChanged={props.onPageChanged}\r\n               pagesCount={pagesCount}\r\n               paginationItemStyle={s.users__pagination_item}\r\n               paginationDivStyle={s.users__pagination}\r\n               activeItemStyle={s.active}\r\n            />\r\n            <div className={s.users_list}>\r\n                {\r\n                    props.users.map(u => (\r\n                        <UserItem \r\n                           authorised={props.authorised}\r\n                           key={u.id}\r\n                           user={u}\r\n                           follow={props.follow}\r\n                           unfollow={props.unfollow}\r\n                           followingInProgress={props.followingInProgress}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","// USERS\r\n\r\nimport { AppStateType } from \"./redux-store\"\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n   return state.usersPage.users\r\n}\r\n\r\nexport const getAuthorised = (state: AppStateType) => {\r\n   return state.auth.isAuthorised\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n   return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n   return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n   return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsLoadingStatus = (state: AppStateType) => {\r\n   return state.usersPage.isLoading\r\n}\r\n\r\nexport const getFollowingInProgressStatus = (state: AppStateType) => {\r\n   return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, actions, requestUsers } from '../../redux/users-reducer';\r\nimport Users from './Users'\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { getAuthorised, getCurrentPage, getFollowingInProgressStatus, getIsLoadingStatus, getPageSize, getTotalUsersCount, getUsers } from '../../redux/selectors';\r\nimport { UserType } from '../../types/types';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport s from './Users.module.css';\r\n\r\nconst setCurrentPage = actions.setCurrentPage\r\n\r\ntype StatePropsType = {\r\n   authorised: boolean\r\n   currentPage: number\r\n   pageSize: number   \r\n   isLoading: boolean\r\n   totalUsersCount: number\r\n   users: Array<UserType>\r\n   followingInProgress: Array<number>\r\n}\r\ntype DispatchPropsType = {\r\n   requestUsers: (currentPage: number, pageSize: number) => void\r\n   setCurrentPage: (pageNumber: number) => void\r\n   follow: (userId: number) => void\r\n   unfollow: (userId: number) => void\r\n}\r\ntype OwnPropsType = {\r\n   pageTitle: string\r\n}\r\ntype PropsType = StatePropsType & DispatchPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n        this.props.setCurrentPage(pageNumber);\r\n    }\r\n\r\n   render() {\r\n      return <>\r\n         {this.props.isLoading ? <Preloader /> : null}\r\n         <h2 className={s.users_title}>{this.props.pageTitle}</h2>\r\n         <Users\r\n            authorised={this.props.authorised}\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            // toggleIsLoading={this.props.toggleIsLoading}\r\n            // toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n            followingInProgress={this.props.followingInProgress}\r\n         />\r\n      </>\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): StatePropsType => {\r\n   return {\r\n      authorised: getAuthorised(state),\r\n      users: getUsers(state),\r\n      pageSize: getPageSize(state),\r\n      totalUsersCount: getTotalUsersCount(state),\r\n      currentPage: getCurrentPage(state),\r\n      isLoading: getIsLoadingStatus(state),\r\n      followingInProgress: getFollowingInProgressStatus(state),\r\n   }\r\n}\r\n\r\nexport default connect<StatePropsType, DispatchPropsType, OwnPropsType, AppStateType>\r\n   (\r\n      mapStateToProps, \r\n      { follow, unfollow, setCurrentPage, requestUsers }\r\n   )(UsersContainer);"],"names":["pages","currentPage","onPageChanged","pagesCount","paginationItemStyle","paginationDivStyle","activeItemStyle","BeginButton","onClick","className","EndButton","map","p","UserItem","authorised","user","follow","unfollow","followingInProgress","s","to","id","src","photos","small","userProfileImage","alt","followed","disabled","some","name","status","props","Math","ceil","totalUsersCount","pageSize","i","push","users","u","getUsers","state","usersPage","getAuthorised","auth","isAuthorised","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoadingStatus","isLoading","getFollowingInProgressStatus","setCurrentPage","actions","UsersContainer","pageNumber","requestUsers","this","Preloader","pageTitle","React","connect"],"sourceRoot":""}